{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Menu.svelte",
    "Player_area.svelte",
    "Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport PlayerArea from './Player_area.svelte'\n\timport Timer from './Timer.svelte'\n\timport Menu from './Menu.svelte'\n\timport { game, players } from './store.js'\n\timport { init, listen } from './socket.js'\n\n\tinit();\n\n\tlisten('GameStart', (data) => {\n\t\t$game = data\n\t})\n\n</script>\n\n<div id=\"game\">\n\t{#each $players as player, i }\n\t\t<PlayerArea index=\"{i}\"/>\n\t{/each}\n</div>\n\n{#if $game.one_connected & !$game.started}\n\t<Menu/>\n{/if}\n\n{#if $game.started}\n\t<Timer/>\n{/if}\n\n\n<style lang=\"scss\">h1 {\n  color: red;\n}\n\n#game {\n  display: flex;\n  flex-wrap: wrap;\n}\n/*# sourceMappingURL=src/App.svelte.map */</style>",
    "<script>\n\nimport { game } from './store'\nimport { send, listen } from './socket.js'\n\nfunction start() {\n    $game.started = true\n    $game.start_time = Date.now()\n    send('GameStart', $game)\n}\n\n</script>\n\n<div id=\"menu\">\n    <button on:click=\"{start}\">Start game</button>\n</div>\n\n<style lang=\"scss\">#menu {\n  padding: 10px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.4);\n}\n#menu button {\n  background: none;\n  border: none;\n  border-bottom: 1px solid green;\n  color: red;\n  font-size: 20px;\n}\n/*# sourceMappingURL=src/Menu.svelte.map */</style>",
    "<script>\n\n    import { game, players } from './store.js'\n    import { send, listen } from './socket.js'\n    \n    export let index;\n    let username\n\n    function clickFunction() {\n        if($players[index].connected) {\n            $players[index].amount += 1\n        }\n    }\n\n\n    function connect() {\n        console.log(\"username: \", username)\n        \n        send('join', {username: username, posID: index})\n        listen('join', (data) => {\n            $players[index].id = data.id\n            $players[index].connected = true\n            $players[index].name = username\n            $players[index].me = true\n            $game.one_connected = true\n\n            data.players.forEach(e => {\n                find = false\n                console.log(data.players, $players)\n                $players.forEach(el => {\n                    if(e.id == el.id) {\n                        find = true\n                    }\n                })\n                if(!find) {\n                    $players[e.posID] = Object.assign($players[e.posID], e, {not_me_connected: true})\n                    console.log(\"last: \", $players)\n                }\n            });\n        })\n        listen('NotAllowd', () => {\n            alert('That pos or thet name is uptaget')\n        })\n        listen('update_players', (data) => {\n            data.forEach(e => {\n                find = false\n                console.log(data, $players)\n                $players.forEach(el => {\n                    if(e.id == el.id) {\n                        find = true\n                    }\n                })\n                if(!find) {\n                    $players[e.posID] = Object.assign($players[e.posID], e, {not_me_connected: true})\n                    console.log(\"last: \", $players)\n                }\n            });\n        })\n\n\n    }\n\n</script>\n\n<!-- svelte-ignore a11y-img-redundant-alt -->\n<div>\n    <h1>{$players[index].name}</h1>\n    <h3>points: {$players[index].amount}</h3>\n\n    <img src=\"{$players[index].path}\" alt=\"click image\" on:click=\"{clickFunction}\">\n\n    {#if !$game.started}\n        <div id=\"connecting\">\n            {#if !$players[index].connected}\n                {#if !$game.one_connected}\n                    <input type=\"text\" placeholder=\"name\" bind:value={username}>\n                    <button on:click=\"{connect}\">connect</button>\n                {:else if $players[index].not_me_connected}\n                    <h3 class=\"load\">this is {$players[index].name}</h3>\n                {:else}\n                    <h3 class=\"load\">Waiting for this person</h3>\n                {/if}\n            {:else  }\n                <h1 class=\"load\">hello {$players[index].name}</h1>\n                <h3 class=\"load\">Waiting on others to join</h3>\n            {/if}\n        </div>\n    {/if}\n\n</div>\n\n<style lang=\"scss\">div {\n  position: relative;\n  border: solid 1px black;\n  width: 50vw;\n  height: 50vh;\n}\ndiv #connecting {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.9);\n  text-align: center;\n  vertical-align: middle;\n}\ndiv #connecting .load {\n  color: red;\n}\ndiv img {\n  display: block;\n  margin: 0 auto;\n  width: 50%;\n}\n/*# sourceMappingURL=src/Player_area.svelte.map */</style>",
    "<script>\n    import { now } from 'svelte/internal';\n    import { game } from './store.js'\n\n    $: if($game.started) {\n        console.log(\"test\")\n        setInterval(() => {\n            if ($game.timer > 0) $game.timer--;\n        }, 100);\n    }\n\n</script>\n\n<div id=\"timer\">\n    <h1>{$game.timer}</h1>\n</div>\n\n<style>\n    #timer {\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: rgba(0, 0, 0, 0.226);\n        color: white;\n        font-size: 150%;\n    }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zcmMvVGltZXIuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFDSTtRQUNJLGVBQWU7UUFDZixRQUFRO1FBQ1IsU0FBUztRQUNULGdDQUFnQztRQUNoQyxnQ0FBZ0M7UUFDaEMsWUFBWTtRQUNaLGVBQWU7SUFDbkIiLCJmaWxlIjoic3JjL1RpbWVyLnN2ZWx0ZSIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgICN0aW1lciB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yMjYpO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIGZvbnQtc2l6ZTogMTUwJTtcbiAgICB9XG4iXX0= */</style>"
  ],
  "names": [],
  "mappings": "AAkCA,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AACjB,CAAC;ACpBkB,KAAK,8BAAC,CAAC,AACxB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAChC,CAAC,AACD,oBAAK,CAAC,MAAM,eAAC,CAAC,AACZ,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC9B,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,AACjB,CAAC;AC4DkB,GAAG,4BAAC,CAAC,AACtB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,iBAAG,CAAC,WAAW,cAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,iBAAG,CAAC,WAAW,CAAC,KAAK,cAAC,CAAC,AACrB,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,iBAAG,CAAC,GAAG,cAAC,CAAC,AACP,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,KAAK,CAAE,GAAG,AACZ,CAAC;AChGG,MAAM,cAAC,CAAC,AACJ,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAChC,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,AACnB,CAAC"
}